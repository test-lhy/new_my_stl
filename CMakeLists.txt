cmake_minimum_required(VERSION 3.24)
project(my_stl)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 23)
file(GLOB STD_SUBDIRS ${PROJECT_SOURCE_DIR}/my_std/*)
set(all_library_name)
foreach (dir ${STD_SUBDIRS})
    if (IS_DIRECTORY ${dir})
        add_subdirectory(${dir})
        list(APPEND all_library_name ${variable_for_father})
    endif ()
endforeach ()
file(GLOB ALL_SRC_FILES ${PROJECT_SOURCE_DIR}/*.cpp)
foreach (SRC_FILE ${ALL_SRC_FILES})
    get_filename_component(EXE_NAME ${SRC_FILE} NAME_WE)
    add_executable(${EXE_NAME} ${SRC_FILE})
    target_link_libraries(${EXE_NAME} PUBLIC -fno-elide-constructors -g -Wall -fsanitize=address,leak -fno-omit-frame-pointer -O0)
    foreach (library ${all_library_name})
        target_link_libraries(${EXE_NAME} PUBLIC ${library})
    endforeach ()
endforeach ()